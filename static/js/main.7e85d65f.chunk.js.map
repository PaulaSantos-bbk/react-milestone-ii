{"version":3,"sources":["components/TodoItem.jsx","components/Todos.jsx","components/AddTodo.jsx","components/layout/Header.jsx","App.js","serviceWorker.js","index.js","components/layout/cake.jpg"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","this","id","title","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","flex","placeholder","className","headerStyle","textAlign","imgStyle","width","height","size","Header","src","cake","alt","uuidv4","require","v4","App","filter","newTodo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7e85d65f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import \"./Todo.css\";\r\n\r\nexport class TodoItem extends Component {\r\n  //style within a function with ternary operator\r\n  getStyle = () => {\r\n    return {\r\n      background: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\",\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\",\r\n    };\r\n  };\r\n\r\n  //onChange equals a method\r\n  //destructuring with variable\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.markComplete.bind(this, id)}\r\n          />{\" \"}\r\n          {title}\r\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\r\n            X\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n};\r\n\r\nconst btnStyle = {\r\n  background: \"#ff0000\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px 9px\",\r\n  borderRadius: \"50%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\",\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\n//import logo from \"./logo.svg\";\r\n//import \"./App.css\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//mapping through the props\r\n//todo passed into TodoItem as a prop\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem\r\n        key={todo.id}\r\n        todo={todo}\r\n        markComplete={this.props.markComplete}\r\n        delTodo={this.props.delTodo}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\n//PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          style={{ flex: \"10\", padding: \"5px\" }}\r\n          placeholder=\"Add more ingredients\"\r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn\"\r\n          style={{ flex: \"1\" }}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\nimport cake from \"./cake.jpg\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1 style={headerStyle}>Shopping List</h1>\r\n      <img style={imgStyle} src={cake} alt=\"Logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst headerStyle = {\r\n  background: \"#333\",\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  padding: \"10px\",\r\n};\r\n\r\nconst imgStyle = {\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  size: \"cover\",\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nconst { v4: uuidv4 } = require(\"uuid\");\nuuidv4();\n\nclass App extends Component {\n  //array\n  state = {\n    todos: [\n      {\n        id: uuidv4(),\n        title: \"200g walnuts\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"150g caster sugar\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"25g cocoa\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"250g mascarpone\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"4 medium eggs\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"2 tsp vanilla extract\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"200g dark chocolate\",\n        completed: false,\n      },\n      {\n        id: uuidv4(),\n        title: \"100g white chocolate\",\n        completed: false,\n      },\n    ],\n  };\n\n  //Toggle Complete\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  //Delete todo -  spread operator and filter high-order array method\n  delTodo = (id) => {\n    this.setState({\n      todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n    });\n  };\n\n  //Add Todo\n  addTodo = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false,\n    };\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  };\n\n  //pass todos state as a prop to the Todos component\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <AddTodo addTodo={this.addTodo} />\n          <Todos\n            todos={this.state.todos}\n            markComplete={this.markComplete}\n            delTodo={this.delTodo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cake.5414f47a.jpg\";"],"sourceRoot":""}